<program> ::= <library> {<imports>}* {<declaration>}* "EOF_"

<library> ::= "library" <identifier> ";"

<imports> ::= "using" <identifier>
            | "using" <identifierlist> "from" <identifier>

<identifierlist> ::= <identifier> 
                   | <identifier> "," <identifierlist>

<declaration> ::= <typeDecl>
                | <funcDecl>
			    | <varDecl>
			    | <statement>

<typeDecl> ::= "def" <type> "{" <parameters> "}" ";"

<funcDecl> ::= <type> <identifier> "(" <parameters> ")" <block> ";"

<varDecl> ::= <type> <identifier> ":" <expression> ";"

<type> ::= <basicType>
         | "unsigned" <type>
		 | <user-defined type>
		 
<basicType> ::= "bool"
			  | "byte"
			  | "short"
			  | "int"
			  | "long"
			  | "char"
			  | "float"
			  | "double"
		 
<parameters> ::= <type> <identifier>
               | <type> <identifier> "," <parameters>

<arguments> ::= <expression> | <expression> "," <arguments>

<statement> ::= <expressionStatement>
              | <forStatement>
			  | <ifStatement>
			  | <returnStatement>
			  | <whileStatement>
			  | <block>

<expressionStatement> ::= <expression> ";"

<forStatement> ::= "for" "(" (<varDecl> | <expression> | ";") {<expression>}? ";" {<expression>}? ")" <statement>

<ifStatement> ::= "if" "(" <expression> ")" <statement> {"else" <statement>}?

<returnStatement> ::= "return" {<expression>}? ";"

<whileStatement> ::= "while" "(" <expression> ")" <statement>

<block> ::= "{" {<declaration>}* "}";

<expression> ::= <assignment>

<assignment> ::= { <call> "." }? <identifier> ":" assignment | <logic_or>

<logic_or> ::= <logic_and> { "||" <logic_and> }*

<logic_and> ::= <equality> { "&&" <equality> }*

<equality> ::= <comparison> { ("!=" | "=" ) <comparison> }*

<comparison> ::= <term> { (">" | ">=" | "<" | "<=" ) <term> }*

<term> ::= <factor> { ( "-" | "+" ) <factor> }*

<factor> ::= <unary> { ( "/" | "*" ) <unary> )*

<unary> ::= ( "!" | "-" ) <unary> | <call>

<call> ::= <primary> ( "(" <arguments> ")" | "." <identifier> )*

<primary> ::= <identifier> | <literal>